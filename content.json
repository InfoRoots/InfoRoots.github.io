[{"title":"php_curl扩展讲解与案例","date":"2017-04-20T05:43:31.224Z","path":"2017/04/20/curl/","text":"本文根据小编在项目中开发的过程详解，不好之处，还请多多指点，欢迎关注我的微信公众号：程序伯乐。 如果这篇文章对你有帮助，请帮作者点个Star,GitHub地址","tags":[]},{"title":"分享好网站和干货","date":"2017-04-20T04:05:10.404Z","path":"2017/04/20/open_code/","text":"本文分享一些工作常用干货和一些适用强的网站，如果有其它干货，可以在下方留言，欢迎关注我的微信公众号：程序伯乐。 网站segmentfault头条：https://segmentfault.com/news 深度开源OPEN代码：http://www.open-open.com/code/ stackoverflow：http://stackoverflow.com/ （推荐） RUNOOB: http://www.runoob.com/ 知乎：https://www.zhihu.com/ （推荐） GitHub: https://github.com/ （推荐） Linux命令搜索：https://jaywcjlove.github.io/linux-command/#!kw=su redis学习网站：http://www.redis.net.cn/ 慕客网: http://www.imooc.com/ (这个不错) 干货时间轴代码（效果简洁）：https://ilkeryilmaz.github.io/timelinejs/ 超级漂亮和实用的JS弹窗样式：https://limonte.github.io/sweetalert2/ 前端资源分享：https://segmentfault.com/a/1190000009129056 阿里珍贵技术资料免费下载：https://yq.aliyun.com/articles/69316?utm_campaign=69316&amp;utm_medium=images&amp;utm_source=thinkphp&amp;utm_content=m_12382 知道这20个正则表达式，能让你少写1,000行代码：http://www.liaoxiansheng.cn/?p=518 工作中经常用到github上优秀、实用、轻量级、无依赖的插件和库：https://github.com/jawil/blog/issues/10 Helloweba：http://www.helloweba.com/ jquery新旧版本下载（实时更新）：http://www.jq22.com/jquery-info122 利用.htaccess提高WordPress的安全可靠性：http://www.liaoxiansheng.cn/?p=58 WordPress如何防注入：http://www.qifanweb.com/news/12/2161.html Git-下面三个教程都是小编认为比较好的文章工作常用Git命令：http://www.cnblogs.com/fanfan259/p/4810517.html#_label4 Git教程-廖雪峰：http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000 GITHUB上的教程：https://github.com/xirong/my-git/blob/master/git-workflow-tutorial.md 备注小编会实时更新这些干货，如果这篇文章对你有帮助，请帮作者点个Star,GitHub地址","tags":[]},{"title":"工作中常用JavaScript代码总结","date":"2017-04-20T00:41:04.289Z","path":"2017/04/20/javascript/","text":"本文根据小编在项目中开发的使用总结，不好之处，还请多多指点，欢迎关注我的微信公众号：程序伯乐。 手机类型判断 1234567var BrowserInfo = &#123; userAgent: navigator.userAgent.toLowerCase() isAndroid: Boolean(navigator.userAgent.match(/android/ig)), isIphone: Boolean(navigator.userAgent.match(/iphone|ipod/ig)), isIpad: Boolean(navigator.userAgent.match(/ipad/ig)), isWeixin: Boolean(navigator.userAgent.match(/MicroMessenger/ig)),&#125; 返回字符串长度，汉子计数为2 12345678910function strLength(str) &#123; var a = 0; for (var i = 0; i &lt; str.length; i++) &#123; if (str.charCodeAt(i) &gt; 255) a += 2;//按照预期计数增加2 else a++; &#125; return a; &#125; 获取url中的参数 1234function GetQueryStringRegExp(name,url) &#123; var reg = new RegExp(\"(^|\\\\?|&amp;)\" + name + \"=([^&amp;]*)(\\\\s|&amp;|$)\", \"i\"); if (reg.test(url)) return decodeURIComponent(RegExp.$2.replace(/\\+/g, \" \")); return \"\";&#125; js 绑定事件 适用于任何浏览器的元素绑定 123456789101112function eventBind(obj, eventType, callBack) &#123; if (obj.addEventListener) &#123; obj.addEventListener(eventType, callBack, false); &#125; else if (window.attachEvent) &#123; obj.attachEvent('on' + eventType, callBack); &#125; else &#123; obj['on' + eventType] = callBack; &#125; &#125;;eventBind(document, 'click', bodyClick); 获得当前浏览器JS的版本 123456789101112131415161718192021222324252627282930313233343536373839404142434445function getjsversion()&#123; var n = navigator; var u = n.userAgent; var apn = n.appName; var v = n.appVersion; var ie = v.indexOf('MSIE '); if (ie &gt; 0)&#123; apv = parseInt(i = v.substring(ie + 5)); if (apv &gt; 3) &#123; apv = parseFloat(i); &#125; &#125; else &#123; apv = parseFloat(v); &#125; var isie = (apn == 'Microsoft Internet Explorer'); var ismac = (u.indexOf('Mac') &gt;= 0); var javascriptVersion = \"1.0\"; if (String &amp;&amp; String.prototype) &#123; javascriptVersion = '1.1'; if (javascriptVersion.match) &#123; javascriptVersion = '1.2'; var tm = new Date; if (tm.setUTCDate) &#123; javascriptVersion = '1.3'; if (isie &amp;&amp; ismac &amp;&amp; apv &gt;= 5) javascriptVersion = '1.4'; var pn = 0; if (pn.toPrecision) &#123; javascriptVersion = '1.5'; a = new Array; if (a.forEach) &#123; javascriptVersion = '1.6'; i = 0; o = new Object; tcf = new Function('o', 'var e,i=0;try&#123;i=new Iterator(o)&#125;catch(e)&#123;&#125;return i'); i = tcf(o); if (i &amp;&amp; i.next) &#123; javascriptVersion = '1.7'; &#125; &#125; &#125; &#125; &#125; &#125; return javascriptVersion;&#125; 获取当前点击事件的Object对象 1234567891011121314151617function getEvent() &#123; if (document.all) &#123; return window.event; //如果是ie &#125; func = getEvent.caller; while (func != null) &#123; var arg0 = func.arguments[0]; if (arg0) &#123; if ((arg0.constructor == Event || arg0.constructor == MouseEvent)|| (typeof (arg0) == \"object\" &amp;&amp; arg0.preventDefault &amp;&amp; arg0.stopPropagation)) &#123; return arg0; &#125; &#125; func = func.caller; &#125; return null;&#125;; 字符串截取方法 123456789101112131415161718192021getCharactersLen: function (charStr, cutCount) &#123; if (charStr == null || charStr == '') return ''; var totalCount = 0; var newStr = ''; for (var i = 0; i &lt; charStr.length; i++) &#123; var c = charStr.charCodeAt(i); if (c &lt; 255 &amp;&amp; c &gt; 0) &#123; totalCount++; &#125; else &#123; totalCount += 2; &#125; if (totalCount &gt;= cutCount) &#123; newStr += charStr.charAt(i); break; &#125; else &#123; newStr += charStr.charAt(i); &#125; &#125; return newStr; &#125; 全选/全不选 12345678910function selectAll(objSelect) &#123; if (objSelect.checked == true) &#123; $(\"input[name='chkId']\").attr(\"checked\", true); $(\"input[name='chkAll']\").attr(\"checked\", true); &#125; else if (objSelect.checked == false) &#123; $(\"input[name='chkId']\").attr(\"checked\", false); $(\"input[name='chkAll']\").attr(\"checked\", false); &#125; &#125; js 判断浏览器 12345678910111213141516171819202122232425判断是否是 IE 浏览器 if (document.all)&#123; alert(”IE浏览器”); &#125;else&#123; alert(”非IE浏览器”); &#125; if (!!window.ActiveXObject)&#123; alert(”IE浏览器”); &#125;else&#123; alert(”非IE浏览器”); &#125; 判断是IE几var isIE=!!window.ActiveXObject; var isIE6=isIE&amp;&amp;!window.XMLHttpRequest; var isIE8=isIE&amp;&amp;!!document.documentMode; var isIE7=isIE&amp;&amp;!isIE6&amp;&amp;!isIE8; if (isIE)&#123; if (isIE6)&#123; alert(”ie6″); &#125;else if (isIE8)&#123; alert(”ie8″); &#125;else if (isIE7)&#123; alert(”ie7″); &#125; &#125; 判断浏览器 1234567891011121314151617181920function getOs() &#123; if (navigator.userAgent.indexOf(\"MSIE 8.0\") &gt; 0) &#123; return \"MSIE8\"; &#125; else if (navigator.userAgent.indexOf(\"MSIE 6.0\") &gt; 0) &#123; return \"MSIE6\"; &#125; else if (navigator.userAgent.indexOf(\"MSIE 7.0\") &gt; 0) &#123; return \"MSIE7\"; &#125; else if (isFirefox = navigator.userAgent.indexOf(\"Firefox\") &gt; 0) &#123; return \"Firefox\"; &#125; if (navigator.userAgent.indexOf(\"Chrome\") &gt; 0) &#123; return \"Chrome\"; &#125; else &#123; return \"Other\"; &#125;&#125; JS判断两个日期大小 适合 2012-09-09 与2012-9-9 两种格式的对比 12345678910111213//得到日期值并转化成日期格式，replace(/\\-/g, \"\\/\")是根据验证表达式把日期转化成长日期格式，这样再进行判断就好判断了 function ValidateDate() &#123; var beginDate = $(\"#t_datestart\").val(); var endDate = $(\"#t_dateend\").val(); if (beginDate.length &gt; 0 &amp;&amp; endDate.length&gt;0) &#123; var sDate = new Date(beginDate.replace(/\\-/g, \"\\/\")); var eDate= new Date(endDate.replace(/\\-/g, \"\\/\")); if (sDate &gt; eDate) &#123; alert('开始日期要小于结束日期'); return false; &#125; &#125; &#125; 回车提交 1234567$(\"id\").onkeypress = function (event) &#123; event = (event) ? event : ((window.event) ? window.event : \"\") keyCode = event.keyCode ? event.keyCode : (event.which ? event.which : event.charCode); if (keyCode == 13) &#123; $(\"SubmitLogin\").onclick(); &#125;&#125; JS 执行计时器 123timeStart = new Date().getTime();timesEnd = new Date().getTime();document.getElementById(\"time\").innerHTML = timesEnd - timeStart; JS 写和读Cookie 123456789101112131415161718192021222324252627282930313233343536373839 //写COOKIE function setCookie(name, value, expires, path, domain) &#123; if (!expires) expires = -1; if (!path) path = \"/\"; var d = \"\" + name + \"=\" + value; var e; if (expires &lt; 0) &#123; e = \"\"; &#125; else if (expires == 0) &#123; var f = new Date(1970, 1, 1); e = \";expires=\" + f.toUTCString(); &#125; else &#123; var now = new Date(); var f = new Date(now.getTime() + expires * 1000); e = \";expires=\" + f.toUTCString(); &#125; var dm; if (!domain) &#123; dm = \"\"; &#125; else &#123; dm = \";domain=\" + domain; &#125; document.cookie = name + \"=\" + value + \";path=\" + path + e + dm;&#125;; //读COOKIE function readCookie(name) &#123; var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for (var i = 0; i &lt; ca.length; i++) &#123; var c = ca[i]; while (c.charAt(0) == ' ') c = c.substring(1, c.length); if (c.indexOf(nameEQ) == 0) &#123; return decodeURIComponent(c.substring(nameEQ.length, c.length)) &#125; &#125; return null&#125; Js 去掉空格方法 123456String.prototype.Trim = function()&#123; return this.replace(/(^\\s*)|(\\s*$)/g, \"\"); &#125;String.prototype.LTrim = function()&#123;return this.replace(/(^\\s*)/g, \"\");&#125;String.prototype.RTrim = function()&#123;return this.replace(/(\\s*$)/g, \"\");&#125; 获取当前时间 123456789101112131415function GetCurrentDate() &#123; var d = new Date(); var y = d.getYear()+1900; month = add_zero(d.getMonth() + 1), days = add_zero(d.getDate()), hours = add_zero(d.getHours()); minutes = add_zero(d.getMinutes()), seconds = add_zero(d.getSeconds()); var str = y + '-' + month + '-' + days + ' ' + hours + ':' + minutes + ':' + seconds; return str; &#125;; function add_zero(temp) &#123; if (temp &lt; 10) return \"0\" + temp; else return temp; &#125; 这里是纯JS脚本代码，主要是给大家一个解题的思路，具体的实现要根据自己项目开发的需求来决定。如果这篇文章对你有帮助，请帮作者点个Star,GitHub地址","tags":[]},{"title":"微信扫码支付开发","date":"2017-04-12T07:50:48.059Z","path":"2017/04/12/wxpay_dev/","text":"本文根据小编在项目中开发的过程详解，不好之处，还请多多指点，欢迎关注我的微信公众号：程序伯乐。 第一步相关配置APPID 、商户号 、API密钥参数获取方法1、APPID ：参数在微信公众号下的&quot;基本配置&quot;即可获取到。 2、商户号 ： 进入公众号点击 &quot;微信支付&quot; -&gt; 商户信息 -&gt; 就可以看到商户号 3、API密钥 ： 进入微信商户平台 -&gt; 账户中心 -&gt; API安全 -&gt; 安装证书 -&gt; 设置密钥（密钥要32位） 第二步小编使用的是微信支付模式二的开发【分享一个微信支付静态页面：http://download.csdn.net/detail/zwj941107/9811989链接是小编自己设计的一个支付静态页面。页面包含AJAX长轮询异步检查订单状态，有兴趣可前往下载】 小编将微信支付的接口集成到一个文件里，如果有需要，可以关注小编的微信公众号：程序伯乐，向小编我留言，小编会在看到的第一时间回复你 首先我们要实例化统一的支付接口 unifiedOrder , 然后设置一些支付所需的参数 , 接着将参数传递到方法getResult()来生成预支付交易结果，下面是小编在项目开发使用的 123456789101112131415161718//使用统一下单API$unifiedOrder = new unifiedOrder();//支付所需参数$amount = trim($this-&gt;config['money']);$notify_url = $this-&gt;config['NotifyUrl'];$out_trade_no = $this-&gt;config['code'];$title = $this-&gt;config['title'];//设置参数$unifiedOrder-&gt;setParameter(\"body\",$title);$unifiedOrder-&gt;setParameter(\"out_trade_no\",$out_trade_no);$unifiedOrder-&gt;setParameter(\"total_fee\",$amount);$unifiedOrder-&gt;setParameter(\"notify_url\",$notify_url);$unifiedOrder-&gt;setParameter(\"trade_type\",\"NATIVE\");//传递参数$unifiedOrderResult = $unifiedOrder-&gt;getResult(); 看下输出的结果，参数值小编会替换成注解，让你们能够更好的理解 12345678910111213141516171819202122 array(10) &#123; [\"return_code\"]=&gt; string(7) \"SUCCESS\" [\"return_msg\"]=&gt; string(2) \"OK\" [\"appid\"]=&gt; string(18) \"公众号APPID\" [\"mch_id\"]=&gt; string(10) \"商户号ID\" [\"nonce_str\"]=&gt; string(16) \"随机字符串\" [\"sign\"]=&gt; string(32) \"签名\" [\"result_code\"]=&gt; string(7) \"SUCCESS\" [\"prepay_id\"]=&gt; string(36) \"wx20170413145149819904c0890820522634\" [\"trade_type\"]=&gt; string(6) \"支付方式，如果是微信端用JsApi；PC扫码方式用Native\" [\"code_url\"]=&gt; string(35) \"weixin://wxpay/bizpayurl?pr=tMm7zOM\"&#125; 第三步生成二维码，调用phpqrcode程序来实现二维码的生成 phpqrcode程序可以去微信开发文档的SDK下载案例，下载出来对应的路径：example-&gt;phpqrcode 1234567891011121314151617181920212223242526/*举个例子*/&lt;html&gt; &lt;head&gt; &lt;title&gt;微信扫码支付&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=\"qrcode\"&gt; &lt;/div&gt; &lt;/body&gt; &lt;script src=\"phpqrcode文件路径\"&gt;&lt;/script&gt; &lt;script type=\"text/javascript\"&gt; var url = \"code_url路径\"; //在上一步小编展示的数组中有个参数【\"code_url\"】,填这个就行 var qr = qrcode(10, \"M\"); qr.addData(url); qr.make(); var wording=document.createElement(\"p\"); wording.innerHTML = \"支付完成前，请勿关闭\"; var code=document.createElement(\"DIV\"); code.innerHTML = qr.createImgTag(); var element=document.getElementById(\"qrcode\"); element.appendChild(wording); element.appendChild(code);'; &lt;/script&gt;&lt;/html&gt; 第四步异步检查订单状态小编使用的是通过setInterval来定时使用AJAX异步检查订单状态的方式。 1234567891011121314151617181920 setInterval(function()&#123; $.ajax(&#123; url:'跳转路径', type: \"post\", data: &#123;out_trade_no:获取微信订单号和商户订单号其中一个用来查询用户是否支付成功&#125;, dataType: \"text\", success: function(res)&#123; if(res.indexOf('success')&gt;-1)&#123; if(res.substring(0)=='1') &#123; $(\"#qrcode p\").text('支付成功'); setTimeout(function()&#123;self.location='要跳转的路径';&#125;,1000); &#125; else &#123; $(\"#qrcode p\").text('支付成功'); setTimeout(function()&#123;self.location='要跳转的路径';&#125;,1000); &#125; &#125; &#125; &#125;); &#125;,3000); 后台的处理小编给各位读者讲个大概思路先判断$_POST[&apos;out_trade_no&apos;]是否有值，然后我们引用微信的查询订单接口orderQuery把参数传递过去，通过getResult方法来获取订单是否支付成功，并返回一个结果给AJAX，你们也可以对获取到的订单信息作出相应的处理和检验。 看到这里的朋友也证明对小编的文章感兴趣，小编相信，只要思路是清晰的，不管什么语言，都能够做出同样的效果。如果这篇文章对你有帮助，请帮作者点个Star,GitHub地址","tags":[]},{"title":"Thinkphp5实现URL重定向","date":"2017-03-23T02:00:27.519Z","path":"2017/03/23/URL_Rewrite/","text":"本文详细描述了小编给Thinkphp5配置URL重定向时的过程，不好之处，还请多多指点，本文以IIS为例，欢迎关注我的微信公众号：程序伯乐。 创建.htaccess,将下面代码写入文件内12345678&lt;IfModule mod_rewrite.c&gt; Options +FollowSymlinks -Multiviews RewriteEngine On RewriteCond %&#123;REQUEST_FILENAME&#125; !-d RewriteCond %&#123;REQUEST_FILENAME&#125; !-f RewriteRule ^(.*)$ index.php/$1 [QSA,PT,L]&lt;/IfModule&gt; 安装URL重写组件先安装URL组件，小编已经把组件64位和32位发布到CSDNhttp://download.csdn.net/detail/zwj941107/9790754 如果觉得版本太旧下面是官网链接，不过不翻墙会访问会比较慢https://www.iis.net/downloads/microsoft/url-rewrite#additionalDownloads 小编在这里就不演示安装了，都是直接点下一步，安装完成要重启 重启完成你打开IIS可以看到一个URL Rewrite 选择右边栏的 Import Rules(-_-英文版,小编也很烦) 最后了，看图中的红字，输入完点击Import，完成，好了，试试访问下网站吧 以下是小编配置成功的页面 如果这篇文章对你有帮助，请帮作者点个Star,GitHub地址","tags":[]},{"title":"微信WIFI与深信服开发详解","date":"2017-03-13T00:50:15.251Z","path":"2017/03/13/wechat_Wifi/","text":"本文详细描述了小编在开发微信WIFI与深信服之间连接时的过程，不好之处，还请多多指点，欢迎关注我的微信公众号：程序伯乐。 如果这篇文章对你有帮助，请帮作者点个Star,GitHub地址","tags":[]},{"title":"微信登陆开发详解（手机登陆和扫码登陆）","date":"2017-03-13T00:50:15.251Z","path":"2017/03/13/wechat_login/","text":"本文详细描述了小编在开发微信登陆时的过程，包含手机登陆和扫码登陆。有不好之处，还请多多指点，欢迎关注我的微信公众号：程序伯乐。 第一步：根据官方手册先做准备工作在进行微信OAuth2.在进行微信OAuth2.0授权登录接入之前，在微信开放平台注册开发者帐号，并拥有一个已审核通过的网站应用，并获得相应的AppID和AppSecret，申请微信登录且通过审核后，可开始接入流程。 微信开放平台链接：https://open.weixin.qq.com/微信登陆开发文档：https://open.weixin.qq.com/cgi-bin/showdocument?action=dir_list&amp;t=resource/res_list&amp;verify=1&amp;lang=zh_CN&amp;token=8b60fff6eb66c3aea970be1a5c8de9cc9c9a874e 第二步：开发整体流程图通过下图我们可以初步了解,要获取用户信息就必须获取access_token,而想获取access_token就必须使用code、appid、appsecret三个参数去获取，往下继续了解这三个参数的获取方式 1、三个参数获取方式 12345AppID和AppSecret：第一步已经说明获取方法code是通过链接获取：https://open.weixin.qq.com/connect/qrconnect?appid=APPID&amp;redirect_uri=REDIRECT_URI&amp;response_type=code&amp;scope=SCOPE&amp;state=STATE#wechat_redirectaccess_token获取方式: https://api.weixin.qq.com/sns/oauth2/access_token?appid=APPID&amp;secret=SECRET&amp;code=CODE&amp;grant_type=authorization_code 2、详解获取code的链接中的scope参数如何设置 3、实现思路1、用户点击微信登陆，先判断用户之前是否使用过微信登陆，如果有则成功跳转，否则执行下一步 2、判断用户是否在微信内置的浏览器上，如果不是则跳转到注册页面 3、如果是则判断$_GET[&apos;code&apos;]是否有值，下一步请求code会传一个参数redirect_url,会重定向到当前判断 4、使用链接获取code，需要传APPID和redirect_url两个参数 5、成功我们就使用code、APPID、AppSecret来换取access_token 第三步：代码开发手机端//返回登录页面 public function login(){ //查找用户是否存在 $user = $this-&gt;userinfo; if($user){ header(\"Location:\".WEB_PATH.\"/mobile/home/\");exit; } /** 判断请求来源是否是微信内置浏览器 */ if($this-&gt;is_wxbrow()){ //获取APPID和APPSECRET两个参数 $cfg=System::load_sys_config('weixin'); $appid = $cfg['appid'] ; $appsecret = $cfg['appsecret'] ; if (!isset($_GET['code'])) { $back = WEB_PATH.\"/mobile/user/login/\" ; //scope参数为snsapi_userinfo $url = \"https://open.weixin.qq.com/connect/oauth2/authorize?appid=$appid&amp;redirect_uri=$back&amp;response_type=code&amp;scope=snsapi_userinfo&amp;state=STATE#wechat_redirect\"; Header(\"Location: $url\"); exit(); } else { $formeat = 'http://'.$_SERVER['HTTP_HOST'].$_SERVER['REQUEST_URI']; $code = $_GET['code']; $openidurl = \"https://api.weixin.qq.com/sns/oauth2/access_token?appid=$appid&amp;secret=$appsecret&amp;code=$code&amp;grant_type=authorization_code\" ; $ch = curl_init(); //创建CURL会话 curl_setopt($ch, CURLOPT_TIMEOUT, 30); //限定页面时间 curl_setopt($ch, CURLOPT_URL, $openidurl); //查询的链接 curl_setopt($ch,CURLOPT_SSL_VERIFYPEER,FALSE); //FALSE禁止cURL验证对等证书 curl_setopt($ch,CURLOPT_SSL_VERIFYHOST,FALSE); //verifyhost curl_setopt($ch, CURLOPT_HEADER, FALSE); //启用时会将头文件的信息作为数据流输出 curl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE); //获取内容但不输出 $res = curl_exec($ch); //抓取URL并把它传递给浏览器，CURLOPT_RETURNTRANSFER为TRUE 将curl_exec()获取的信息以字符串返回，而不是直接输出。 curl_close($ch); //关闭cUrl会话 $opendata = json_decode($res,true); $openid = $opendata['openid']; $access_token = $opendata['access_token']; $userinfo=$this-&gt;db-&gt;GetOne(\"SELECT * from `@#_member` where `openid` = '$openid'\"); if($userinfo){ //跟新session _setcookie(\"uid\",_encrypt($userinfo['uid']),60*60*24*7); _setcookie(\"ushell\",_encrypt(md5($userinfo['uid'].$userinfo['password'].$userinfo['mobile'].$userinfo['email'])),60*60*24*7); header(\"location: $formeat\"); }else{ //注册 //获取用户的详细信息 $userinfourl = \"https://api.weixin.qq.com/sns/userinfo?access_token=$access_token&amp;openid=$openid&amp;lang=zh_CN\"; $chr = curl_init(); curl_setopt($chr, CURLOPT_TIMEOUT, 30); curl_setopt($chr, CURLOPT_URL, $userinfourl); curl_setopt($chr,CURLOPT_SSL_VERIFYPEER,FALSE); curl_setopt($chr,CURLOPT_SSL_VERIFYHOST,FALSE); curl_setopt($chr, CURLOPT_HEADER, FALSE); curl_setopt($chr, CURLOPT_RETURNTRANSFER, TRUE); $userinfo = curl_exec($chr); curl_close($chr); $uinfo = json_decode($userinfo,true); //将xml转换成array //保存用户的姓名和头像 $username=$uinfo['nickname']; $img=$uinfo['headimgurl']; _setcookie('bd_nickname',$username); _setcookie('bd_headimgurl',$img); _setcookie('bd_openid',$openid); include templates(\"mobile/user\",\"bangding\"); exit; } } }else { include templates(\"mobile/user\",\"login\"); } } /** 判断请求来源是否是微信内置浏览器 */ private function is_wxbrow(){ //$_SERVER['HTTP_USER_AGENT']: 是获取访问者的个人信息 //strtolower： 转换成小写 $agent = strtolower($_SERVER['HTTP_USER_AGENT']); //通过micromessenger来识别是否是微信内置浏览器，strpos的作用是查找 $fg = strpos($agent , \"micromessenger\") ; if($fg === false ) return false ; else return true ; } 网站端 与移动端是基本相同的，唯一不同是请求CODE的时候，看下图 如果这篇文章对你有帮助，请帮作者点个Star,GitHub地址","tags":[]},{"title":"Hexo-GitHubPage配置详解","date":"2017-03-10T03:34:21.730Z","path":"2017/03/10/hexo-GitHubPage/","text":"本文详细描述了如何在Github上，使用Hexo部署博客，欢迎关注我的微信公众号：程序伯乐。 Hexo的安装申请GitHub账号注册地址：账号注册 创建博客仓库 注意，仓库名应该为：用户名.github.io。比如，我的仓库名是：InfoRoots.github.io。 安装Git下载地址：git 配置SSH个人推荐教程:从0开始学习 GitHub 系列 安装Nginx下载地址: Nginx，执行安装，在cmd使用 node -v的命令来测试NodeJS是否安装成功 1node -v 成功会显示node的版本号 安装Hexo在本地新建一个Blog文件夹，文件右键，选择Git Bash Here。 输入指令安装hexo 1$ npm install -g hexo-cli 初始化Hexo1$ hexo init hexo-cli 初始化成功会显示Start blogging with Hexo! 进入hexo-cli文件目录,安装依赖文件以及部署形成文件123$ cd hexo-cli$ npm install$ hexo generate 初探Hexo1$ hexo server 默认的地址是：http://localhost:4000/ 将本地Hexo项目托管到Github配置GitHubPage进入仓库，点击右边的”Setting”菜单进入设置,下拉选择”master branch” 打开修改hexo_cli目录下配置文件_config.yml。修改deploy 部署你本地的主题到github上，使用下面命令123$ hexo clean$ hexo g$ hexo d 如果这篇文章对你有帮助，请帮作者点个Star,GitHub地址","tags":[]}]